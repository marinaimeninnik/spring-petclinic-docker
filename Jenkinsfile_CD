pipeline {
    agent {
        label 'ubuntu22_04'
    }

    parameters{
        string(name: 'publicIp', defaultValue: '3.70.166.62', description: 'Enter public ip target deployment machine')
        choice(name: 'environment', choices: ['dev', 'qa'], description: 'Select environment for deployment')
    }
    
    environment {
        DOCKERHUB_CREDENTIALS = credentials('3fd6e258-dfed-4537-a548-c3272953e573')
    }

    stages {
        stage('Clean workspace') {
            steps {
                cleanWs()
            }
        }

        stage('Run container on chosen server') {
            steps {
                script{
                    def deployServer

                    if (params.environment == 'dev'){
                        deployServer = 'dev-server'
                    }
                    else if (params.environment == 'qa'){
                        deployServer = 'qa-server'
                    }

                    withCredentials([usernamePassword(credentialsId: '3fd6e258-dfed-4537-a548-c3272953e573', usernameVariable: 'DOCKERHUB_CREDENTIALS_USR', passwordVariable: 'DOCKERHUB_CREDENTIALS_PSW')]) {                        
                        
                        def dockerRun = 'sudo docker run -p 8080:8080 -d marinaimeninnik/petclinic:latest'
                        def dockerLogin = 'sudo docker login -u $DOCKERHUB_CREDENTIALS_USR -p $DOCKERHUB_CREDENTIALS_PSW'
                        
                        sshagent([sshAgentCredential(credentialsId: ${deployServer})]) {
                            sh "ssh -o StrictHostKeyChecking=no ubuntu@${publicIp} ${dockerLogin}"
                            sh "ssh -o StrictHostKeyChecking=no ubuntu@${publicIp} ${dockerRun}"                            
                        }
                    }
                }    
            }
        }
    }
}