pipeline {
    agent {
        label 'ubuntu22_04'
    }

    parameters {
        string(name: 'publicIp', defaultValue: '3.70.166.62', description: 'Enter public IP target deployment machine')
        choice(name: 'environment', choices: ['dev', 'qa'], description: 'Select environment for deployment')
    }

    environment {
        DOCKERHUB_CREDENTIALS = credentials('3fd6e258-dfed-4537-a548-c3272953e573')
    }

    stages {
        stage('Clean workspace') {
            steps {
                cleanWs()
            }
        }

        stage('Run container on chosen server') {
            steps {
                script {
                    def serverDetails = [:]
                    if (params.environment == 'dev') {
                        serverDetails = [
                            serverName: 'dev-server',
                            dockerRun: 'sudo docker run -p 8080:8080 -d marinaimeninnik/petclinic:latest',
                        ]
                    } else if (params.environment == 'qa') {
                        serverDetails = [
                            serverName: 'qa-server',
                            dockerRun: 'sudo docker run -p 8080:8080 -d marinaimeninnik/petclinic:latest',
                        ]
                    }

                    withCredentials([usernamePassword(credentialsId: '3fd6e258-dfed-4537-a548-c3272953e573', usernameVariable: 'DOCKERHUB_CREDENTIALS_USR', passwordVariable: 'DOCKERHUB_CREDENTIALS_PSW')]) {
                        sshagent([serverDetails.serverName]) {
                            sh "ssh -o StrictHostKeyChecking=no ubuntu@${publicIp} echo 'hey you there'"
                            // sh "ssh -o StrictHostKeyChecking=no ubuntu@${publicIp} ${serverDetails.dockerLogin}"
                            // sh "ssh -o StrictHostKeyChecking=no ubuntu@${publicIp} ${serverDetails.dockerRun}"
                        }
                    }
                }
            }
        }
    }
}
